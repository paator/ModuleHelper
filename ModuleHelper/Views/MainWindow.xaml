<Window x:Class="ModuleHelper.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ModuleHelper.Views"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="16"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="MainWindow" Height="400" Width="658">

    <Window.Resources>
        <Style TargetType="{x:Type Button}" x:Key="WhitePianoKey">
            <Setter Property="Height" Value="100"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#FFE6E6E6"/>
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="Command" Value="{Binding PianoCommand}"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="BlackPianoKey">
            <Setter Property="Height" Value="55"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Background" Value="#FF4B4B4B"/>
            <Setter Property="BorderBrush" Value="#FF404040"/>
            <Setter Property="Margin" Value="-12,0"/>
            <Setter Property="Canvas.ZIndex" Value="1"/>
            <Setter Property="Command" Value="{Binding PianoCommand}"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>

        <!-- Musical Scale Text Label Definition -->
        <Label Grid.Row="1" Grid.Column="1" Content="Musical scale:"/>

        <!-- Musical Scale Picker -->
        <ComboBox Grid.Row="1" 
                  Grid.Column="2" 
                  ItemsSource="{Binding MusicalScales}" 
                  SelectedItem="{Binding CurrentMusicalScale, Mode=TwoWay}"
                  Margin="20,0">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}"></TextBlock>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <!-- Main Note picker (using Enum) -->
        <ComboBox Grid.Row="1" 
                  Grid.Column="3" 
                  ItemsSource="{Binding Notes}"
                  SelectedItem="{Binding CurrentNote, Mode=TwoWay}"
                  Margin="20,0">
        </ComboBox>

        <!-- Notes in scale text label definition -->
        <Label Grid.Row="2" Grid.Column="1" Content="Notes in selected scale:"/>

        <!-- List View of every musical note in selected scale -->
        <ListView Grid.Row="2" 
                  Grid.Column="2" 
                  Grid.ColumnSpan="3" 
                  ItemsSource="{Binding CurrentMusicalScaleNotes}"
                  Margin="20,0">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListView>

        <!-- Create a chord text label definition -->
        <Label Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Content="Create a chord using piano keyboard:"/>

        <!-- Piano used for chord selection-->
        <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="3">
            <!-- Octave 1 -->
            <Button Style="{StaticResource WhitePianoKey}" Content="C" CommandParameter="0"/>
            <Button Style="{StaticResource BlackPianoKey}" Content="C#" CommandParameter="1"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="D" CommandParameter="2"/>
            <Button Style="{StaticResource BlackPianoKey}" Content="D#" CommandParameter="3"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="E" CommandParameter="4"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="F" CommandParameter="5"/>
            <Button Style="{StaticResource BlackPianoKey}" Content="F#" CommandParameter="6"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="G" CommandParameter="7"/>
            <Button Style="{StaticResource BlackPianoKey}" Content="G#" CommandParameter="8"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="A" CommandParameter="9"/>
            <Button Style="{StaticResource BlackPianoKey}" Content="A#" CommandParameter="10"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="B" CommandParameter="11"/>
            <!-- Octave 2 -->
            <Button Style="{StaticResource WhitePianoKey}" Content="C" CommandParameter="12"/>
            <Button Style="{StaticResource BlackPianoKey}" Content="C#" CommandParameter="13"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="D" CommandParameter="14"/>
            <Button Style="{StaticResource BlackPianoKey}" Content="D#" CommandParameter="15"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="E" CommandParameter="16"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="F" CommandParameter="17"/>
            <Button Style="{StaticResource BlackPianoKey}" Content="F#" CommandParameter="18"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="G" CommandParameter="19"/>
            <Button Style="{StaticResource BlackPianoKey}" Content="G#" CommandParameter="20"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="A" CommandParameter="21"/>
            <Button Style="{StaticResource BlackPianoKey}" Content="A#" CommandParameter="22"/>
            <Button Style="{StaticResource WhitePianoKey}" Content="B" CommandParameter="23"/>
        </StackPanel>
    </Grid>
</Window>